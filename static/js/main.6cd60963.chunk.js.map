{"version":3,"sources":["components/Form/style.js","components/Form/Layout.js","components/Form/index.js","components/Photo/index.js","components/Photos/index.js","components/Header/index.js","components/Layout.js","redux/actions.js","components/App.js","serviceWorker.js","redux/reducer.js","redux/store.js","index.js"],"names":["useStyles","makeStyles","formControl","marginBottom","minWidth","width","sol","Layout","props","rover","camera","onChange","onClick","classes","style","textAlign","FormControl","className","InputLabel","id","Select","labelId","name","value","MenuItem","TextField","label","type","InputLabelProps","shrink","error","helperText","Grid","direction","justify","container","Button","variant","Form","page","showPhotos","root","img","height","Photo","photo","alt","src","img_src","list","display","flexWrap","justifyContent","paddingTop","btn","connect","state","photos","nextPage","length","map","key","e","theme","title","flexGrow","bar","background","Header","AppBar","position","Toolbar","Typography","isLoading","target","setState","updatePlanets","event","preventDefault","planetsFetchData","this","Container","React","Component","mapDispatchToProps","dispatch","fetch","then","res","status","json","Error","data","catch","err","console","log","App","Boolean","window","location","hostname","match","initialState","reducer","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6cd60963.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n  formControl: {\r\n    marginBottom: 50,\r\n    minWidth: 120,\r\n    width: \"100%\",\r\n  },\r\n  sol: {\r\n    width: \"100%\",\r\n    marginBottom: 50,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  InputLabel,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { useStyles } from \"./style\";\r\n\r\nexport default function Layout(props) {\r\n  const { rover, camera, sol, onChange, onClick } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <h2 style={{ textAlign: \"center\" }}>select options</h2>\r\n      <form>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"rover\">Choose the rover</InputLabel>\r\n          <Select\r\n            labelId=\"rover\"\r\n            id=\"rover\"\r\n            name=\"rover\"\r\n            value={rover}\r\n            onChange={onChange}\r\n          >\r\n            <MenuItem value=\"curiosity\">Curiosity</MenuItem>\r\n            <MenuItem value=\"opportunity\">Opportunity</MenuItem>\r\n            <MenuItem value=\"spirit\">Spirit</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"camera\">Choose the camera</InputLabel>\r\n          <Select\r\n            labelId=\"camera\"\r\n            id=\"camera\"\r\n            name=\"camera\"\r\n            value={camera}\r\n            onChange={onChange}\r\n          >\r\n            <MenuItem value=\"fhaz\">Front</MenuItem>\r\n            <MenuItem value=\"rhaz\">Rear</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          id=\"sol\"\r\n          label=\"Sol\"\r\n          name=\"sol\"\r\n          value={sol}\r\n          type=\"number\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          className={classes.sol}\r\n          onChange={onChange}\r\n          error={sol < 1}\r\n          helperText=\"not less than 1\"\r\n        />\r\n        <Grid direction=\"row\" justify=\"center\" container>\r\n          <Button variant=\"contained\" onClick={onClick}>\r\n            Show photos\r\n          </Button>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Layout from \"./Layout\";\r\n\r\nexport default function Form(props) {\r\n  const { sol, camera, rover, page, onChange, showPhotos } = props;\r\n  return (\r\n    <Layout\r\n      onClick={showPhotos}\r\n      onChange={onChange}\r\n      sol={sol}\r\n      camera={camera}\r\n      rover={rover}\r\n      page={page}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"48%\",\r\n    marginBottom: 10,\r\n  },\r\n  img: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n});\r\n\r\nexport default function Photo(props) {\r\n  const classes = useStyles();\r\n  const { photo } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <img alt=\"img\" src={photo.img_src} className={classes.img}></img>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Photo from \"../Photo\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    paddingTop: 20,\r\n  },\r\n  btn: {\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nfunction Photos(props) {\r\n  const classes = useStyles();\r\n  const { photos, nextPage } = props;\r\n  const LoadNewPage = (e) => {\r\n    nextPage();\r\n  };\r\n\r\n  if (photos.length) {\r\n    return (\r\n      <>\r\n        <ol className={classes.list}>\r\n          {photos.map((photo) => (\r\n            <Photo key={photo.id} photo={photo} />\r\n          ))}\r\n        </ol>\r\n        <Grid\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          container\r\n          className={classes.btn}\r\n        >\r\n          <Button variant=\"outlined\" onClick={LoadNewPage}>\r\n            Load more…\r\n          </Button>\r\n        </Grid>\r\n      </>\r\n    );\r\n  } else {\r\n    return <h3>No photos</h3>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  photos: state.photos,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Photos);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  bar: {\r\n    background: \"black\",\r\n  },\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" className={classes.bar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Nasa\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Form from \"./Form\";\r\nimport Photos from \"./Photos\";\r\nimport Header from \"./Header\";\r\nimport { updatePlanets, planetsFetchData } from \"../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Layout extends React.Component {\r\n  state = {\r\n    rover: \"opportunity\",\r\n    camera: \"fhaz\",\r\n    sol: 1,\r\n    page: 1,\r\n    isLoading: true,\r\n  };\r\n\r\n  onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  nextPage = (e) => {\r\n    this.setState(\r\n      (state) => {\r\n        return { page: state.page + 1 };\r\n      },\r\n      () => {\r\n        const { sol, camera, rover, page } = this.state;\r\n        this.props.updatePlanets({ rover, camera, sol, page });\r\n      }\r\n    );\r\n  };\r\n\r\n  showPhotos = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.sol > 0) {\r\n      this.setState({ page: 1 }, () => {\r\n        const { sol, camera, rover, page } = this.state;\r\n        this.props.planetsFetchData({ rover, camera, sol, page });\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { sol, camera, rover, page } = this.state;\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container>\r\n          <Form\r\n            onChange={this.onChange}\r\n            showPhotos={this.showPhotos}\r\n            rover={rover}\r\n            sol={sol}\r\n            page={page}\r\n            camera={camera}\r\n          />\r\n          <Photos nextPage={this.nextPage} />\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nconst mapDispatchToProps = { updatePlanets, planetsFetchData };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);\r\n","export const GET_PLANETS = \"GET_PLANETS\";\r\nexport const UPDATE_PLANETS = \"UPDATE_PLANETS\";\r\n\r\nexport function planetsFetchDataSuccess(photos) {\r\n  return {\r\n    type: GET_PLANETS,\r\n    photos,\r\n  };\r\n}\r\n\r\nexport function planetsFetchData({ rover, camera, sol, page }) {\r\n  return (dispatch) => {\r\n    const KEY = \"cQzJd3198WmBLRaaR7I6wKsGIESoJwfyNpvnJfsh\";\r\n    const BaseURL = \"https://api.nasa.gov/mars-photos/api/v1/rovers\";\r\n    fetch(\r\n      `${BaseURL}/${rover}/photos?sol=${sol}&camera=${camera}&page=${page}}&api_key=${KEY}`\r\n    )\r\n      .then((res) => {\r\n        if (res.status < 400) {\r\n          return res.json();\r\n        } else {\r\n          throw Error(\"Error\");\r\n        }\r\n      })\r\n      .then((data) => {\r\n        dispatch(planetsFetchDataSuccess(data.photos));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n}\r\n\r\nexport function updatePlanetsSuccess(photos) {\r\n  return {\r\n    type: UPDATE_PLANETS,\r\n    photos,\r\n  };\r\n}\r\n\r\nexport function updatePlanets({ rover, camera, sol, page }) {\r\n  return (dispatch) => {\r\n    const KEY = \"cQzJd3198WmBLRaaR7I6wKsGIESoJwfyNpvnJfsh\";\r\n    const BaseURL = \"https://api.nasa.gov/mars-photos/api/v1/rovers\";\r\n    fetch(\r\n      `${BaseURL}/${rover}/photos?sol=${sol}&camera=${camera}&page=${page}}&api_key=${KEY}`\r\n    )\r\n      .then((res) => {\r\n        if (res.status < 400) {\r\n          return res.json();\r\n        } else {\r\n          throw Error(\"Error\");\r\n        }\r\n      })\r\n      .then((data) => {\r\n        dispatch(updatePlanetsSuccess(data.photos));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n}\r\n","import React from \"react\";\n\n//components\nimport Layout from \"./Layout\";\n\nclass App extends React.Component {\n  render() {\n    return <Layout />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { GET_PLANETS, UPDATE_PLANETS } from \"./actions\";\r\n\r\nconst initialState = {\r\n  photos: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PLANETS:\r\n      return { ...state, photos: action.photos };\r\n    case UPDATE_PLANETS:\r\n      return { ...state, photos: [...state.photos, ...action.photos] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport reducer from \"./reducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.js\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}